{%- assign tag_limit = 5 -%}
{%- assign show_button_limit = tag_limit | minus: 1  -%}
{%- assign total_active_filters = 0  -%}


<div class="page-width">
  <ul class="no-bullets tag-list tag-list--active-tags text-center">
    {%- for filter in collection.filters -%}
      {%- assign total_active_filters = total_active_filters | plus: filter.active_values.size -%}

      {%- for filter_value in filter.active_values -%}
        <li class="tag tag--remove">
          <a class="btn btn--small js-no-transition" href="{{ filter_value.url_to_remove }}">
            {{ filter_value.label | escape }}
          </a>
          <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-close" viewBox="0 0 64 64"><path d="M19 17.61l27.12 27.13m0-27.12L19 44.74"/></svg>
        </li>
      {%- endfor -%}
    {%- endfor -%}
  </ul>
</div>

<form class="filter-form collection-filter__scrollable" data-aos="overflow__animation__small">
  {%- for filter in collection.filters -%}
    {%- assign filter_index = forloop.index -%}
    {%- capture filter_id -%}TagList-{{ filter.label | handleize }}-{{ filter_index }}{%- endcapture -%}

    <div class="collection-filter__group collection-filter__group--{{ filter_index }}{% if filter.type == 'price_range' %} collection-filter__group--price{% endif %}">
      <div class="collection-filter__inner">
        <div class="collection-filter__title">
          {{ filter.label | escape }}
        </div>

        {%- case filter.type -%}
          {%- when 'list' -%}
            {%- liquid
              assign is_color = false
              if section.settings.enable_color_swatches
                assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
                assign downcased_label = filter.label | downcase
                if downcased_label contains swatch_trigger
                  assign is_color = true
                elsif swatch_trigger == 'color' and downcased_label contains 'colour'
                  assign is_color = true
                endif
              endif
            -%}

            <ul class="no-bullets tag-list">
              {%- assign tag_count = 0 -%}
              {%- assign swatch_file_extension = 'png' -%}
              {%- for filter_value in filter.values -%}
                {%- liquid
                  if filter_value.count > 0
                    assign tag_count = tag_count | plus: 1
                  endif
                  assign filter_value_index = forloop.index

                  assign color_file_name = filter_value.label | handle | append: '.' | append: swatch_file_extension
                  assign color_image = color_file_name | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first
                  assign color_swatch_fallback = filter_value.label | split: ' ' | last | handle
                -%}

                <li class="tag{% if filter_value.active %} tag--active{% endif %}{% if is_color %} tag--swatch{% endif %}{% if filter_value.count == 0%} hide{% endif %}">
                  <label class="tag__checkbox-wrapper text-label js-no-transition">
                    <input
                      type="checkbox"
                      class="tag__input"
                      name="{{ filter_value.param_name }}"
                      value="{{ filter_value.value }}"
                      {% if filter_value.active %}checked{% endif %}>
                    {%- if is_color -%}
                      <span
                        class="color-swatch color-swatch--filter color-swatch--{{ filter_value.label | handle }}"
                        title="{{ filter_value.label }}"
                        style="background-color: {{ color_swatch_fallback }};{% if images[color_file_name] != blank %}  background-image: url({{ color_image }});{% endif %}"
                      >
                        {{ filter_value.label }}
                      </span>
                      <span class="tag__text hide">{{ filter_value.label | escape }}</span>
                    {%- else -%}
                      <span class="tag__checkbox"></span>
                      <span>
                        <span class="tag__text">{{ filter_value.label | escape }}</span> ({{ filter_value.count }})
                      </span>
                    {%- endif -%}
                  </label>
                </li>
              {%- endfor -%}
            </ul>

            {%- if tag_count == 0 -%}
              {%- style -%}
                .collection-filter__group--{{ filter_index }} { display: none; }
              {%- endstyle -%}
            {%- endif -%}
          {%- when 'price_range' -%}
            {% comment %} Comma code from Dawn {% endcomment %}
            {% liquid
              assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
              assign uses_comma_decimals = false

              if currencies_using_comma_decimals contains cart.currency.iso_code
                assign uses_comma_decimals = true
              endif

              assign filter_min_value = filter.min_value.value | money_without_currency | replace: ',', ''
              assign filter_max_value = filter.max_value.value | money_without_currency | replace: ',', ''
              assign filter_range_min = filter.range_min | money_without_currency | replace: ',', ''
              assign filter_range_max = filter.range_max | money_without_currency | replace: ',', ''

              if uses_comma_decimals
                if filter.min_value.value
                  assign filter_min_value = filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.'
                endif

                if filter.max_value.value
                  assign filter_max_value = filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.'
                endif

                assign filter_range_min = filter.range_min | money_without_currency | replace: '.', '' | replace: ',', '.'
                assign filter_range_max = filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.'
              endif
            %}
            <div
              class="price-range"
              data-min-value="{{ filter_min_value }}"
              data-min-name="{{ filter.min_value.param_name }}"
              data-min="{{ filter_range_min }}"
              data-max-value="{{ filter_max_value }}"
              data-max-name="{{ filter.max_value.param_name }}"
              data-max="{{ filter_range_max }}">
              <div class="price-range__display-wrapper">
                <span class="price-range__display-min">{{ filter_min_value }}</span>
                <span class="price-range__display-max">{{ filter_max_value }}</span>
              </div>
              <div class="price-range__slider-wrapper">
                <div class="price-range__slider"></div>
              </div>
              <input
                class="price-range__input price-range__input-min"
                name="{{ filter.min_value.param_name }}"
                value="{{ filter_min_value }}"
                readonly>
              <input
                class="price-range__input price-range__input-max"
                name="{{ filter.max_value.param_name }}"
                value="{{ filter_max_value }}"
                readonly>
            </div>
        {%- endcase -%}
      </div>
    </div>
  {%- endfor -%}
</form>
